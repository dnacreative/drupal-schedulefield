<?php

require_once __DIR__ . '/schedulefield.crud.inc';
require_once __DIR__ . '/schedulefield.field.inc';
require_once __DIR__ . '/schedulefield.field_formatter.inc';
require_once __DIR__ . '/schedulefield.field_widget.inc';

/**
 * Implements hook_theme().
 */
function schedulefield_theme() {
  return [
    'schedulefield_item' => [
      'variables' => [
        'item' => [],
        'md_enabled' => false,  // Enable microdata
        'md_property' => '',    // Microdata property for the field items
      ],
      'template' => 'schedulefield-item',
    ],
  ];
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_schedulefield_item(&$variables) {
  if ($variables['md_enabled']) {
    $variables['itemscope'] = ' itemscope itemtype="http://schema.org/OpeningHoursSpecification"';
    $variables['itemprop'] = !empty($variables['md_property']) ? ' itemprop="' . $variables['md_property'] . '"' : '';
  }
}

/**
 * Returns available slots in a day.
 *
 * @return
 *   An array of available slots in a day keyed by slot key and containing
 *   the slot readable name.
 */
function schedulefield_get_slots() {
  $slots =& drupal_static(__FUNCTION__, []);
  if (!$slots) {
    $slots = [
      'morning'   => t('Morning'),
      'afternoon' => t('Afternoon'),
    ];
    drupal_alter('schedule_field_slots', $slots);
  }
  return $slots;
}

/**
 * Function helper to get day name from a given week day number.
 */
function schedulefield_get_day_name($day) {
  $week = [
    0 => t('Sunday'),
    1 => t('Monday'),
    2 => t('Tuesday'),
    3 => t('Wednesday'),
    4 => t('Thursday'),
    5 => t('Friday'),
    6 => t('Saturday'),
  ];
  return isset($week[$day]) ? $week[$day] : '';
}

/**
 * Function helper to get the matching microdata URL from a given week day number.
 */
function schedulefield_get_day_microdata_url($day) {
  $url = 'http://schema.org/';

  switch ($day) {
    case 0: return $url . 'Sunday';
    case 1: return $url . 'Monday';
    case 2: return $url . 'Tuesday';
    case 3: return $url . 'Wednesday';
    case 4: return $url . 'Thursday';
    case 5: return $url . 'Friday';
    case 6: return $url . 'Saturday';
    default: return '';
  }
}
